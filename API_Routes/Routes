const {User} = require('../Models(userSchema)/userSchema');
//console.log(User);
const express=require('express');
const router=express.Router();


//const mongoose = require('mongoose');
//mongoose.Promise = global.Promise;
// Routes created here can be tested in postman and its basically backend routes 
// It can be implemented in front end using cors and http client services
// Importing userchema in APIs

// Passing express router here and Returning Api router(routes)

    // creating a Post request and name it as register
    router.post('/', async (req, res) => {
        let [first, second] = Object.keys(req.body);
        // console.log(first , second);
         if(Object.keys(req.body).length>2 || first!='email' || second!='password'){
             res.json({success:"False" , message : "Please donot add Extra/Invalid/Empty fields in the Request Body"});
         }
         else {
        if (!req.body.email) {
            res.json({ success: false, message: "Please provide an email" });
        }
        else {
            if (!req.body.password) {
                res.json({ success: false, message: "Please provide a password" });
            }
            else {
        let user=new User(
            {
                email:req.body.email,
                password:req.body.password
            })
           
            await user.save((err) => {
                if (err) {
                    if (err.code === 11000) {
                        res.json({ success: false, message: 'Email already exits !!' });
                    }

                    else {
                        if (err.errors) {
                            if (err.errors.email) {
                                res.json({ success: false, message: err.errors.email.message });
                            }
                        }
                      /*  else {

                            if (err.errors.password) {
                                res.json({ success: false, message: err.errors.password.message });
                            }
                            else {
                                res.json({ success: false, message: 'Error found !!', err })
                            }
                        }*/}}
            else {
                res.json({ success: true, message: 'User Saved' })
            }
        }    
                    
                    )
           

       }}} })                
        // what user is going to send us
        //req.body.email , we have to check if user sends all these else send back the error
        module.exports=router;
    


